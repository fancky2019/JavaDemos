package Test.test2022;

/*
  对信息用客户端的私钥签名-->对信息用Server的公钥加密-->server收到信息用server的私钥解密-->server用客户端的公钥验签

私钥加密算法（对称加密算法 如AES），因为解密密钥和加密密钥是相同的，所以这个密钥是不能公开的。

公钥算法(非对称加密算法 如RSA)
公钥和私钥成对出现
公钥和私钥是相对的，并没有限制谁只能是公钥，只是我们将公开的密钥叫公钥，私有的叫私钥
用公钥（私钥）加密的数据只有对应的私钥（公钥）可以解密
公钥（私钥）只能解对应私钥（公钥）加密的数据


 */

/*
 * 私钥不公开，公钥公开。私钥包含公钥。
 */

/*
 * 数据加密：
 * 公钥加密，私钥解密。拥有私钥的才能解密。如：客户端发送用公钥加密的数据，服务端用私钥解密。
 * 私钥加密，公钥解密。有公钥的都可解密。如服务器广播用私钥加密数据，客户端用公钥解密。
 *
 *
 *
 *
 * 数据签名：数字签名技术是将摘要信息用发送者的私钥加密，与原文一起传送给接收者。接收者只有用发送者的公钥
 * 才能解密被加密的摘要信息，然后用HASH函数对收到的原文产生一个摘要信息，与解密的摘要信息对比。如果相同，
 * 则说明收到的信息是完整的，在传输过程中没有被修改，否则说明信息被修改过，因此数字签名能够验证信息的完整
 * 性。
 *
 *
 * 整个加密签名过程：
 * A向B发送信息的整个签名和加密的过程如下：
 * 1、A先用自己的私钥（PRI_A）对信息（一般是信息的摘要）进行签名。
 * 2、A接着使用B的公钥（PUB_B）对信息内容和签名信息进行加密。
 * 这样当B接收到A的信息后，获取信息内容的步骤如下：
 * 1、用自己的私钥（PRI_B）解密A用B的公钥（PUB_B）加密的内容；
 * 2、得到解密后的明文后用A的公钥（PUB_A）解签A用A自己的私钥（PRI_A）的签名。
 */


/*
 * 公钥用于对数据进行加密，私钥用于对数据进行解密。
 * 私钥用于对数据进行签名，公钥用于对签名进行验证
 */

/*
 * 通过RSA加密将AES的key发给对方，通过AES加密、解密通信。
 */
public class EncryptTest {
}
