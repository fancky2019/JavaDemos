package Test.test2021.designpattern;

/**
对原对象功能的拓展
接口功能的拓展：有点类似代理环绕增强、但是代理只能固定增强，装饰者可以通过派生类拓展。


 代理模式："控制访问"（隐藏对象，增强非业务逻辑）。
 装饰器模式："增强功能"（透明扩展，支持嵌套组合）。
 两者选择取决于需求：需控制权限或隐藏细节时用代理；需动态扩展功能时用装饰器
 */
public class DecoratorPattern {
}
